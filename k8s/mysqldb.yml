apiVersion: v1
kind: ConfigMap
metadata:
  name: mysqldb-configmap
data:
  0000-create-table.sql: |
    CREATE TABLE products (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(30),
    price INT
    );
  0001-insert-data.sql: |
    INSERT INTO products (name, price)
    VALUES ("Hammer", 199),
      ("Nail", 99),
      ("Screwdriver", 79);
  0002-create-user.sql: |
    CREATE TABLE user (
      id INT AUTO_INCREMENT PRIMARY KEY,
      username VARCHAR(100) UNIQUE NOT NULL,
      password VARCHAR(200) NOT NULL
    );
---
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
  labels:
    app: mysqldb
spec:
  ports:
    - port: 3306
      name: mysqldb-port
  clusterIP: None
  selector:
    app: mysqldb
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysqldb-sts
spec:
  serviceName: "mysqldb-service"
  replicas: 1
  selector:
    matchLabels:
      app: mysqldb
  template:
    metadata:
      labels:
        app: mysqldb
    spec:
      containers:
        - name: mysqldb
          image: mysql:8
          ports:
            - containerPort: 3306
              name: mysqldb-port
          envFrom:
            - secretRef:
                name: mysqldb-secrets
          env:
            - name: MYSQL_DATABASE
              value: example
            - name: MYSQL_USER
              value: username
          volumeMounts:
            - name: datadir
              mountPath: /var/lib/mysql/
            - name: mysqldb-config-map
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: mysqldb-config-map
          configMap:
            name: mysqldb-configmap

  volumeClaimTemplates:
    - metadata:
        name: datadir
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 300M
